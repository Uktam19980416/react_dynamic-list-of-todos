{"version":3,"sources":["components/TodoList/TodoList.tsx","api/api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","isSelected","useState","selectedTodoId","setSelectedTodoId","query","setQuery","isFiltered","setIsFiltered","filteredTodos","filter","todo","title","toLowerCase","includes","completed","className","type","placeholder","value","onChange","event","target","map","cn","checked","readOnly","id","onClick","userId","API_URL","CurrentUser","selectedUser","setSelectedUser","loadUser","a","axios","get","then","res","data","getUsersFromApi","useEffect","name","email","phone","App","selectedUserId","setSelectedUserId","setTodos","loadTodos","isLoadedTodos","handleSelectedTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2800d900.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[];\n  isSelected: (userId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, isSelected }) => {\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [query, setQuery] = useState('');\n  const [isFiltered, setIsFiltered] = useState('all');\n\n  let filteredTodos = todos.filter(todo => (\n    todo.title.toLowerCase().includes(query.toLowerCase())\n  ));\n\n  switch (isFiltered) {\n    case 'completed':\n      filteredTodos = filteredTodos.filter(todo => todo.completed === true);\n      break;\n\n    case 'active':\n      filteredTodos = filteredTodos.filter(todo => todo.completed === false);\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <input\n        type=\"text\"\n        placeholder=\"Filter by title\"\n        data-cy=\"filterByTitle\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n\n      <select\n        value={isFiltered}\n        onChange={(event) => setIsFiltered(event.target.value)}\n      >\n        <option value=\"all\">All</option>\n        <option value=\"active\">Not Completed</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n\n      <div className=\"TodoList__list-container\">\n        <ul\n          className=\"TodoList__list\"\n          data-cy=\"listOfTodos\"\n        >\n          {filteredTodos.map(todo => (\n            <li\n              key={todo.id}\n              className={cn(\n                'TodoList__item',\n                { 'TodoList__item--unchecked': !todo.completed },\n                { 'TodoList__item--checked': todo.completed },\n              )}\n            >\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                type=\"button\"\n                className={cn(\n                  'button',\n                  'TodoList__user-button',\n                  {\n                    'TodoList__user-button--selected':\n                    todo.id === selectedTodoId,\n                  },\n                )}\n                data-cy=\"userButton\"\n                onClick={() => {\n                  isSelected(todo.userId);\n                  setSelectedTodoId(todo.id);\n                }}\n              >\n                { `User #${todo.userId}` }\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst API_URL = 'https://mate.academy/students-api';\n\nexport function getUsers(id: number): Promise<User> {\n  return axios.get(`${API_URL}/users/${id}`)\n    .then(res => res.data);\n}\n\nexport function getTodos(): Promise<Todo[]> {\n  return axios.get(`${API_URL}/todos`)\n    .then(res => res.data);\n}\n","import React, { useEffect, useState } from 'react';\nimport { getUsers } from '../../api/api';\nimport './CurrentUser.scss';\n\ntype Props = {\n  userId: number;\n  isSelected: (id: number) => void,\n};\n\nexport const CurrentUser: React.FC<Props> = ({ userId, isSelected }) => {\n  const [selectedUser, setSelectedUser] = useState<User>();\n\n  const loadUser = async () => {\n    const getUsersFromApi = await getUsers(userId);\n\n    setSelectedUser(getUsersFromApi);\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, [userId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>{`Selected user: ${userId}`}</span>\n      </h2>\n      <h3 className=\"CurrentUser__name\">{ selectedUser?.name }</h3>\n      <p className=\"CurrentUser__email\">{ selectedUser?.email }</p>\n      <p className=\"CurrentUser__phone\">{selectedUser?.phone}</p>\n\n      <button\n        type=\"button\"\n        onClick={() => isSelected(0)}\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nconst App: React.FC = () => {\n  const [\n    selectedUserId,\n    setSelectedUserId,\n  ] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const loadTodos = async () => {\n    const isLoadedTodos = await getTodos();\n\n    setTodos(isLoadedTodos);\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const handleSelectedTodos = (userId: number) => {\n    setSelectedUserId(userId);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todos}\n          isSelected={handleSelectedTodos}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              userId={selectedUserId}\n              isSelected={handleSelectedTodos}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}